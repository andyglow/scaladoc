-# --
/** The `App` trait can be used to quickly turn objects
 *  into executable programs. Here is an example:
 *  {{{
 *  object Main extends App {
 *    Console.println("Hello World: " + (args mkString ", "))
 *  }
 *  }}}
 *
 *  No explicit `main` method is needed.  Instead,
 *  the whole class body becomes the “main method”.
 *
 *  `args` returns the current command line arguments as an array.
 *
 *  ==Caveats==
 *
 *  '''It should be noted that this trait is implemented using the [[DelayedInit]]
 *  functionality, which means that fields of the object will not have been initialized
 *  before the main method has been executed.'''
 *
 *  Future versions of this trait will no longer extend `DelayedInit`.
 */
-# --
scaladoc
  [description]
    | The <pre>App</pre> trait can be used to quickly turn objects
    |  into executable programs. Here is an example:
    |  <code>
    |    object Main extends App {
    |      Console.println("Hello World: " + (args mkString ", "))
    |    }
    |</code>
    |<p>
    |  No explicit <pre>main</pre> method is needed.  Instead,
    |    the whole class body becomes the “main method”.
    |</p>
    |<p>
    |  <pre>args</pre> returns the current command line arguments as an array.
    |</p>
    |<h2>Caveats</h2>
    |<p>
    |  <b>It should be noted that this trait is implemented using the [[DelayedInit]]
    |    functionality, which means that fields of the object will not have been initialized
    |    before the main method has been executed.</b>
    |</p>
    |<p>
    |  Future versions of this trait will no longer extend <pre>DelayedInit</pre>.
    |</p>
-# --